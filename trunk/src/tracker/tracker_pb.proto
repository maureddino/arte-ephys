/* Define some types of transformations from
   camera pixel to room position */
message ScaleShift {
        optional float               x_scale  = 1;
        optional float               x_shift  = 2;
        optional float               y_scale  = 3;
        optional float               y_shift  = 4;
}
message Affine2D {
        repeated float                  coef  = 1;
}


/* Describe one camera of the tracker */
message CameraOpt {
        optional int32                    id  = 1;
        optional string      input_file_name  = 2;
        optional string      output_file_name = 3;
        optional ScaleShift  px_to_pos_scale  = 4;
        optional Affine2D    px_to_pos_aff2d  = 5;

        optional int32             led_blur1  = 6;
        optional float         led_threshold  = 7;
        optional int32             led_blur2  = 8;
        optional int32            body_blur1  = 9;
        optional float        body_threshold  = 10;
        optional int32            body_blur2  = 11;
}


message CameraGroup {
        repeated CameraOpt              cam  = 1;
        enum CombineStyle {
             NONE = 1;
             PANOSTITCH = 2;
             FULL3D = 3;
        }
        optional CombineStyle       combine  = 2;
        optional string               label  = 3;
}

message Led {
        optional float                x_pos  = 1;
        optional float                y_pos  = 2;
        optional float                z_pos  = 3;
}

message TrackerOpt {
        repeated CameraGroup          group  = 1;
        optional int32           max_n_cams  = 2;
        optional string               timer  = 3;
        optional int32                n_led  = 4;
        /* What else? */
}